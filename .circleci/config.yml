version: 2.1

orbs:
  python: circleci/python@2.1.1

workflows:
  variant_validator_ci:
    jobs:
      - build-mysql
      - build-postgres
      - build-seqrepo
      - build-and-test-vv:
          requires:
            - build-mysql
            - build-postgres
            - build-seqrepo

jobs:
  build-mysql:
    docker:
      - image: ubuntu/mysql:8.0-22.04_beta
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
      MYSQL_DATABASE: "validator"
      MYSQL_USER: "vvadmin"
      MYSQL_PASSWORD: "var1ant"
    steps:
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Install necessary dependencies
          command: |
            apt-get update && apt-get install -y wget
          environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      - run:
          name: Download validator database dump
          command: |
            wget --output-document=/docker-entrypoint-initdb.d/validator_2023_08.sql.gz https://www528.lamp.le.ac.uk/vvdata/validator/validator_2023_08.sql.gz

  build-postgres:
    docker:
      - image: postgres:14.7
    environment:
      POSTGRES_DB: "vvta"
      POSTGRES_USER: "uta_admin"
      POSTGRES_PASSWORD: "uta_admin"
    steps:
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Install necessary dependencies
          command: |
            apt-get update && apt-get install -y wget
      - run:
          name: Download vvta database dump
          command: |
            echo "shared_buffers = 2GB" > /docker-entrypoint-initdb.d/postgresql.conf
            wget https://www528.lamp.le.ac.uk/vvdata/vvta/vvta_2023_05_no_seq.sql.gz -O input_file.sql.gz
            gzip -dq input_file.sql.gz
            sed 's/anyarray/anycompatiblearray/g' input_file.sql > modified_file.sql
            rm input_file.sql
            gzip modified_file.sql
            mv modified_file.sql.gz /docker-entrypoint-initdb.d/vvta_2023_05_noseq.sql.gz

  build-seqrepo:
    docker:
      - image: ubuntu:22.04
    steps:
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Install necessary dependencies
          command: |
            apt-get update && apt-get install -y wget
      - run:
          name: Download and extract Seqrepo data
          command: |
            mkdir -p /usr/local/share/seqrepo
            wget --output-document=/usr/local/share/seqrepo/VV_SR_2023_05.tar https://www528.lamp.le.ac.uk/vvdata/vv_seqrepo/VV_SR_2023_05.tar
            tar -xvf /usr/local/share/seqrepo/VV_SR_2023_05.tar --directory /usr/local/share/seqrepo
      - persist_to_workspace:
          root: /usr/local/share/seqrepo
          paths:
            - VV_SR_2023_05

  build-and-test-vv:
    docker:
      - image: cimg/python:3.10.5
    steps:
      - checkout
      - attach_workspace:
          at: /usr/local/share/seqrepo
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Install dependencies
          command: pip install .
      - run:
          name: Copy configuration file
          command: cp configuration/continuous_integration.ini "$HOME"/.variantvalidator
          environment:
            HOME: /app
      - run:
          name: Run tests
          command: pytest
    environment:
      HOME: /app

      # Add an if-statement example
      # If the VV_SR_2023_05.tar file exists, echo "Seqrepo data exists", otherwise echo "Seqrepo data not found"
      - run:
          name: Check Seqrepo data existence
          command: |
            if [ -f "/usr/local/share/seqrepo/VV_SR_2023_05.tar" ]; then
              echo "Seqrepo data exists"
            else
              echo "Seqrepo data not found"
            fi
